<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.mr.apps.JNordVpnManager</groupId>
	<artifactId>JNordVpnManager</artifactId>
	<version>2025.5.1</version>
	<name>JNordVpnManager</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<geotools.version>33-SNAPSHOT</geotools.version>
		<maven.deploy.skip>true</maven.deploy.skip>
	</properties>
	<repositories>
		<repository>
			<id>osgeo</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>osgeo-snapshot</id>
			<name>OSGeo Snapshot Repository</name>
			<url>https://repo.osgeo.org/repository/snapshot/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>openHAB</id>
			<name>openHabTinyB</name>
			<url>https://openhab.jfrog.io/openhab/libs-release/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
		<!-- Optionally: parameterized tests support -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>5.10.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-swing</artifactId>
			<version>${geotools.version}</version>
		</dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geotiff</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-image</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-wms</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.javacsv</groupId>
			<artifactId>javacsv</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20240303</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openhab.osgiify/fr.bmartel.jspeedtest -->
		<dependency>
			<groupId>org.openhab.osgiify</groupId>
			<artifactId>fr.bmartel.jspeedtest</artifactId>
			<version>1.32.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/fr.bmartel/http-endec -->
		<dependency>
			<groupId>fr.bmartel</groupId>
			<artifactId>http-endec</artifactId>
			<version>1.04</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.6.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<id>shade-jar-with-dependencies</id>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<!-- filter signed jars in the dependencies -->
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<shadedClassifierName></shadedClassifierName>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>
											com.mr.apps.JNordVpnManager.Starter</Main-Class>
										<Implementation-Vendor>
											com.mr.apps</Implementation-Vendor>
										<Implementation-Title>
											JNordVPN Manager</Implementation-Title>
										<Implementation-Version>
											${project.version}</Implementation-Version>
									</manifestEntries>
								</transformer>
								<!-- merges META-INF/javax.media.jai.registryFile.jai entries instead of overwriting -->
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/javax.media.jai.registryFile.jai</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/registryFile.jai</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/registryFile.jaiext</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.media.jai.OperationRegistrySpi</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.imageio.spi.ImageInputStreamSpi</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.api.filter.expression.Function</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.imageio.spi.ImageWriterSpi</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.imageio.spi.ImageReaderSpi</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.api.referencing.operation.CoordinateOperationAuthorityFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.api.referencing.datum.DatumAuthorityFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.api.referencing.cs.CSAuthorityFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.api.referencing.crs.CRSAuthorityFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.imageio.spi.ImageOutputStreamSpi</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/org.geotools.util.ConverterFactory</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/javax.measure.spi.ServiceProvider</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>it/geosolutions/jaiext/resources/image/it.geosolutions.jaiext.scale.properties</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- create lib directory with dependencies and the jar with
			classpath
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<mainClass>com.mr.apps.JNordVpnManager.Starter</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			-->
		</plugins>
		<resources>
			<resource>
				<directory>
					${basedir}/src/main/java/com/mr/apps/JNordVpnManager/resources</directory>
				<targetPath>com/mr/apps/JNordVpnManager/resources</targetPath>
			</resource>
		</resources>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.6.3</version>
				<configuration>
					<source>11</source>
					<!-- Specifies whether or not the version text is included.-->
					<version>false</version>
					<!-- Omit qualifying package name before class names in output.-->
					<noqualifier>all</noqualifier>
					<!-- Shuts off non-error and non-warning messages.-->
					<quiet>true</quiet>
					<!-- The maximum Java heap size to be used to run javadoc. -->
					<maxmemory>${javadoc.maxHeapSize}</maxmemory>
					<!-- Specifies the encoding name of the source files.-->
					<encoding>UTF-8</encoding>
					<!-- Set an additional parameter for the command line. -->
					<additionalOptions>-keywords</additionalOptions>
					<breakiterator>true</breakiterator>
					<excludePackageNames>
						org.geotools.resources:org.geotools.maven:com:net.opengis:org.w3:javax:it.geosolutions</excludePackageNames>
					<!-- Enables the Javadoc tool to interpret a simple, one-argument -->
					<!-- custom block tag tagname in doc comments. Note:
					<placement/> -->
					<!-- should be a combination of the letters Xaoptcmf.             -->
					<tags>
						<tag>
							<name>todo</name>
							<placement>a</placement>
							<head>TODO:</head>
						</tag>
						<tag>
							<name>todo:</name>
							<placement>a</placement>
							<head>TODO:</head>
						</tag>
						<tag>
							<name>TODO</name>
							<placement>a</placement>
							<head>TODO:</head>
						</tag>
						<tag>
							<name>task</name>
							<placement>tfmc</placement>
							<head>TODO:</head>
						</tag>
						<tag>
							<name>revisit</name>
							<placement>tfmc</placement>
							<head>TODO:</head>
						</tag>
						<tag>
							<name>generated</name>
							<placement>Xt</placement>
							<head>Generated</head>
						</tag>
						<tag>
							<name>UML</name>
							<placement>a</placement>
							<head>UML:</head>
						</tag>
						<tag>
							<name>uml.property</name>
							<placement>a</placement>
							<head>UML property:</head>
						</tag>
						<tag>
							<name>generated</name>
							<placement>X</placement>
						</tag>
					</tags>
					<!-- Creates links to existing javadoc-generated         -->
					<!-- documentation of external referenced classes.       -->
					<links>
						<link>https://docs.oracle.com/javase/11/docs/api/</link>
						<link>https://javaee.github.io/javaee-spec/javadocs/</link>
						<link>https://locationtech.github.io/jts/javadoc/</link>
					</links>
				</configuration>
				<!-- only works with package javadoc:aggregate for use of META-INF/MANIFEST.MF Automatic-Module-Name -->
				<reportSets>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
						<inherited>false</inherited>
					</reportSet>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
